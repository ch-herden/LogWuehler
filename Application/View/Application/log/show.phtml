<div class="well row">
	<div class="col-md-3">
		<table>
			<tr>
				<td>Von:</td>
				<td>
					<input type="text" id="time_start" class="form-control jsDate" value="<?= $this->_view['startTime'] ?>" />
				</td>
			</tr>
			<tr>
				<td>Bis:</td>
				<td>
					<input type="text" id="time_end" class="form-control jsDate" value="<?= $this->_view['endTime'] ?>" />
				</td>
			</tr>
		</table>
	</div>
	<div class="col-md-7">
		<div class="input-group">
			<span class="input-group-addon"><span class="glyphicon glyphicon-search"></span></span>
			<input type="text" id="term" class="form-control" placeholder="Suchbegriff">
		</div>
	</div>
	<div class="col-md-2">
		<button type="button" class="btn btn-primary btn-block">Anzeigen</button>
	</div>
</div>

<div class="well row jsContent">
	<div id="jsLoad" class="text-center hide">
		<img src="/images/ajax-loader.gif" />
	</div>
	<div id="jsContentFailed" class="text-center hide">Keine Ergebnisse gefunden</div>
	<div id="jsContentSuccess" class="hide">
		<table class="table table-bordered jsContent" id="logTable">
			<thead></thead>
			<tbody></tbody>
		</table>
	</div>
</div>

<script type="text/javascript">

	$(document).ready(function() {
		$.timepicker.regional['de'] = {
			timeOnlyTitle: 'Uhrzeit auswählen',
			timeText: 'Zeit',
			hourText: 'Stunde',
			minuteText: 'Minute',
			secondText: 'Sekunde',
			currentText: 'Jetzt',
			closeText: 'Auswählen',
			ampm: false
		};
		$.timepicker.setDefaults($.timepicker.regional['de']);
		$('.jsDate').datetimepicker({dateFormat: "dd.mm.yy"});

		$('button').on('click', function() {
			content.showLoadingWindow();

			var params = {
				time_start: $('#time_start').val(),
				time_end: $('#time_end').val(),
				term: $('#term').val(),
				file: '<?= $this->_view['file'] ?>'
			};
			$.ajax({
				type: "POST",
				url: '/log/data?filetype=<?= $this->_view['fileType'] ?>',
				data: params,
				success: function(data) {
					try {
						data = JSON.parse(data);
					} catch (e) {
						content.showError();
						return;
					}

					content.putContentInTable(data);
				},
				error: function() {
					content.showError();
				}
			});


//			$.post('/log/data?filetype=<?= $this->_view['fileType'] ?>', params, function(data) {
//				try {
//					data = JSON.parse(data);
//				} catch (e) {
//					content.showError();
//					return;
//				}
//
//				content.putContentInTable(data);
//			});
		});

		var content = {
			showError: function() {
				$('.well.jsContent > div').addClass('hide');
				$('#jsContentFailed').removeClass('hide');
			},
			showData: function() {
				$('.well.jsContent > div').addClass('hide');
				$('#jsContentSuccess').removeClass('hide');
			},
			showLoadingWindow: function() {
				$('.well.jsContent > div').addClass('hide');
				$('#jsLoad').removeClass('hide');
			},
			putContentInTable: function(data) {
				var header = '<tr>';
				var content = '';

				if (data.content.length < 1) {
					this.showError();
					return;
				}

				for (var i = 0; i < data.header.length; i++) {
					header += '<th>' + data.header[i] + '</th>';
				}
				header += '</tr>';

				for (var i = 0; i < data.content.length; i++) {
					content += '<tr>';
					$.each(data.content[i], function(key, value) {
						content += '<td>' + value + '</td>';
					});
					content += '</tr>';

				}
				console.log(content);
				$('table.jsContent thead').html(header);
				$('table.jsContent tbody').html(content);
				this.showData();
			}
		}
	});

</script>